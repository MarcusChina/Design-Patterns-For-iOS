一、定义：
   提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。
二、相关解释：
   抽象工厂与工厂方法对比：
   1、抽象工厂： a.通过对象组合创建抽象产品  b.创建多系列产品  c.必须修改父类的接口才能支持新的产品
   2、工厂方法： a.通过类的继承创建抽象产品  b.创建一种产品    c.子类化创建者并重载工厂方法以创建新产品
   3、抽象工厂模式&工厂方法模式：
　　   工厂方法模式只有一个抽象产品类，而抽象工厂模式有多个；工厂方法模式中工厂类一般只有一个方法，创建一种产品；抽象工厂模式中工厂类一般有多个方法，创
      建一系列产品。
　　4、可以这么来理解：工厂方法模式是一种极端情况的抽象工厂模式，而抽象工厂模式可以看成是工厂方法模式的一种推广。
   5、抽象工厂的优点：能够很方便的变换产品系列；具体的创建实例过程与客户端分离，客户端是通过它们的抽象接口操作实例，产品的具体类名也被具体工厂的实现分
      离，不会出现在客户代码中
三、使用场景：
  （1）一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节，这对于所有形态的工厂模式都是重要的。
  （2）这个系统的产品有多于一个的产品族，而系统只消费其中某一族的产品。
  （3）同属于同一个产品族的产品是在一起使用的，这一约束必须在系统的设计中体现出来。（比如：Intel主板必须使用Intel CPU、Intel芯片组）
  （4）系统提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于实现。
