
一、定义：
   定义一个操作中算法的骨架，而将一些步骤延迟到子类中。模板方法使子类可以重定义算法的某些特定步骤而不改变该算法的结构。

二、相关说明：
   通俗来讲就是：定义一个父类，有父类定义接口规范，然后不同的行为在子类中实现。这样一方面提高了代码的复用性，另一方面还可以利用面向对象的多态性，在运行
   时选择一种具体子类。模板模式是一种基于继承的代码复用技术，是一种类行为型模式。模板模式应该是最简单的一种设计模式，只存在继承关系，代码也相对简单。

   模板方法模式中的控制结构流程是倒转的，因为父类的模板方法调用其子类的操作，而不是子类调用父类的操作。
   模板方法会调用五种类型的操作：
   1、对具体类或客户端类的具体操作；
   2、对抽象类的具体操作；
   3、抽象操作；
   4、工厂方法；
   5、钩子操作(可选抽象操作)；


   模板模式和策略模式的不同点：
  （1）策略模式的应用场景:多个类的区别只是在于行为不同。   你需要行为的算法做很多变动。  客户端不知道算法使用的数据。
  （2）模板模式的使用场景：相同的算法放在一个类中（父类）将算法变化的部分放在子类中。  子类公共的算法放在一个公共类中，避免代码重复。

三、适用场景：
   1、需要一次性实现算法的不变部分，并将可变的行为留给子类来实现；
   2、子类的共同行为应该被提取出来放到公共类中，以避免代码重复。现有代码的差别应该被分离为新的操作。然后用一个调用这些操作的模板方法来替换这些不同的代码。
   3、需要控制子类的扩展。可以定义一个在特定点调用“钩子”(hook)操作的模板方法。子类可以通过对钩子操作的实现在这些点扩展功能。

四、Demo说明：
  MSOnLineShop为父类
  MSTmall，MSJDong 为MSOnLineShop的子类
  参考：http://www.cnblogs.com/xiaofeixiang/p/5126158.html
