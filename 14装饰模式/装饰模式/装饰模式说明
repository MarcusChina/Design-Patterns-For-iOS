一、定义：
   动态地给一个对象添加一些额外的职责。就扩展模式来说，装饰模式相比生成子类更为灵活。

二、相关解释：
   多用组合，少用继承。
   装饰者模式原理图1中的：
   Component：定义ConcreteComponent和Decorator类要实现的方法，装饰对象和真实对象的之间的通信就是通过Component实现；
   ConcreteComponent：真实对象，使用ConcreteComponent的派生类提供核心功能，与Decorator是同一级别；
   Decorator：具有特定装饰功能的类，用来装饰ConcreteComponent类，具体的装饰子类通过继承Decorator实现；

三、适用场景：
  1、想要在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责；
  2、想要扩展一个类的行为，却做不到。类定义可能被隐藏，无法进行子类化；或者，对类的每个行为的扩展，为支持每种功能组合，将产生大量的子类；
  3、对类的职责的扩展是可选的。

四、Demo说明：
   参考：http://www.jianshu.com/p/b4832dc54a95
